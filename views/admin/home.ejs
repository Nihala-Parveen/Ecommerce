<%- include('../layouts/adminhomeHeader.ejs') %>

<div id="page-wrapper">
    <div class="main-page">
    <div class="col_3">
    <div class="col-md-3 widget widget1">
        <div class="r3_counter_box">
            <i class="pull-left fa fa-dollar icon-rounded"></i>
            <div class="stats">
              <h5><strong>â‚¹ <%= totalPrice %></strong></h5>
              <span>Total Revenue</span>
            </div>
        </div>
    </div>
    <div class="col-md-3 widget widget1">
        <div class="r3_counter_box">
            <i class="pull-left fa fa-shopping-cart user1 icon-rounded"></i>
            <div class="stats">
              <h5><strong><%= productCount %></strong></h5>
              <span>Total Products</span>
            </div>
        </div>
    </div>
   
    <div class="col-md-3 widget widget1">
        <div class="r3_counter_box">
            <i class="pull-left fa fa-truck dollar1 icon-rounded"></i>
            <div class="stats">
              <h5><strong><%= orderCount %></strong></h5>
              <span>Total Orders</span>
            </div>
        </div>
     </div>
     <div class="col-md-3 widget widget1">
        <div class="r3_counter_box">
            <i class="pull-left fa fa-money icon-rounded"></i>
            <div class="stats">
              <h5><strong><%= sales %></strong></h5>
              <span>Total Sales</span>
            </div>
        </div>
        </div>
        <div class="col-md-3 widget">
            <div class="r3_counter_box">
                <i class="pull-left fa fa-users dollar2 icon-rounded"></i>
                <div class="stats">
                    <h5><strong>
                            <%= userCount %>
                        </strong></h5>
                    <span>Total Users</span>
                </div>
            </div>
        </div>
        
        <div class="clearfix"> </div>
        </div>
    
        
        <div class="row-one widgettable">
            <div class="col-md-7 content-top-2 card">
                <canvas id="myChart"></canvas>
                <select id="timeFrame" onchange="timeFrame()" class="form-control" style="margin-bottom: 30px;">
                    <option value="">-- Select Time Range --</option>
                    <option value="0">Weekly</option>
                    <option value="1">Monthly</option>
                    <option value="2">Yearly</option>
                </select>
            </div>
        
            <div class="col-md-3 stat">
                <div class="content-top-1">
                    <div class="col-md-6 top-content">
                        <h5><a href="/topProducts" style="color: black;">Best Selling Products</h5></a>
                    </div>
        
         <div class="clearfix"> </div>
        </div>
        <div class="content-top-1">
            <div class="col-md-6 top-content">
                <h5><a href="/topCategory" style="color: black;">Best Selling Categories</h5></a>
            </div>
            
             <div class="clearfix"> </div>
            </div>
        
        
    </div>
    <div class="clearfix"> </div>
</div>

<div class="forms">    
    <div class=" form-grids row form-grids-right">
        
            
            <div class="form-body">
                <form class="form-horizontal" action="/salesReport" method="POST"> 
                    <div class="form-group"> 
                        <label for="category" class="col-sm-2 control-label">View Sales</label> 
                        <div class="col-sm-9"> <select name="timeRange" id="" class="form-control">                                
                                    <option value="daily">Daily</option>
                                    <option value="weekly">Weekly</option>
                                    <option value="yearly">Yearly</option>
                        </select></div> 
                    </div>                                                                            
                    <div class="col-sm-offset-2"> 
                        <button type="submit" class="btn btn-default">Sumbit</button> 
                    </div> 
                </form>                
            </div>
            <div class="form-body">
                <form class="form-horizontal" action="/dateSales" method="POST"> 
                    <div class="form-group"> 
                        <label for="startDate" class="col-sm-2 control-label">Start Date</label> 
                        <div class="col-sm-9">
                            <input type="date" name="fromDate" class="form-control">
                        </div> 
                    </div>
                    <div class="form-group"> 
                        <label for="endDate" class="col-sm-2 control-label">End Date</label> 
                        <div class="col-sm-9">
                            <input type="date" name="toDate" class="form-control">
                        </div> 
                    </div>                                                                            
                    <div class="col-sm-offset-2"> 
                        <button type="submit" class="btn btn-default">Submit</button> 
                    </div> 
                </form>                
            </div>
            
        
    </div>
</div>
        
        
        

<!-- for amcharts js -->
    <script src="js/amcharts.js"></script>
    <script src="js/serial.js"></script>
    <script src="js/export.min.js"></script>
    <link rel="stylesheet" href="css/export.css" type="text/css" media="all" />
    <script src="js/light.js"></script>
<!-- for amcharts js -->

<script  src="js/index1.js"></script>



        
    </div>
</div>

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js/dist/chart.umd.min.js"></script>
    <script>
        function timeFrame() {
        const selectElement = document.getElementById('timeFrame');
        const val = parseInt(selectElement.value);

        async function fetchData() {
            const url = '/chartFilter';
            const response = await fetch(url);
            const datapoints = await response.json();
            return datapoints;
        }

        fetchData().then(datapoints => {
            let labels, data, label;
            labels = datapoints.weekly.map(item => item._id);
            data = datapoints.weekly.map(item => item.totalRevenue);
            label = 'Weekly Sales';
            if (val === 0) { // Weekly
                labels = datapoints.weekly.map(item => item._id);
                data = datapoints.weekly.map(item => item.totalRevenue);
                label = 'Weekly Sales';
            } else if (val === 1) { // Monthly
                labels = datapoints.monthly.map(item => item._id);
                data = datapoints.monthly.map(item => item.totalRevenue);
                label = 'Monthly Sales';
            } else if (val === 2) { // Yearly
                labels = datapoints.yearly.map(item => item._id);
                data = datapoints.yearly.map(item => item.totalRevenue);
                label = 'Yearly Sales';
            }

            myChart.config.data.labels = labels;
            myChart.config.data.datasets[0].data = data;
            myChart.config.data.datasets[0].label = label;
            myChart.update();
        });
    }

    async function fetchWeeklyData() {
        const url = '/chartFilter';
        const response = await fetch(url);
        const datapoints = await response.json();
        return datapoints.weekly;
    }

    fetchWeeklyData().then(weeklyData => {
        const labels = weeklyData.map(item => item._id);
        const data = weeklyData.map(item => item.totalRevenue);
        const label = 'Weekly Sales';

        myChart.config.data.labels = labels;
        myChart.config.data.datasets[0].data = data;
        myChart.config.data.datasets[0].label = label;
        myChart.update();
    });

        // setup 
        const data = {
              labels: [],
            datasets: [{
                label: 'Weekly Sales',
                data: [] ,
                backgroundColor: [
                    'rgba(255, 26, 104, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(0, 0, 0, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 26, 104, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(0, 0, 0, 1)'
                ],
                borderWidth: 1
            }]
        };

        // config 
        const config = {
            type: 'bar',
            data,
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        };

        // render init block
        const myChart = new Chart(
            document.getElementById('myChart'),
            config
        );

        // Instantly assign Chart.js version
        const chartVersion = document.getElementById('chartVersion');
        chartVersion.innerText = Chart.version;
    </script>


<%- include('../layouts/adminFooter.ejs') %>